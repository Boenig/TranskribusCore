//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.19 at 03:32:22 PM CET 
//


package eu.transkribus.core.model.beans.fat;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.literature.at/schemas/FAT/FAT_1.1.xsd}SubFolder" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.literature.at/schemas/FAT/FAT_1.1.xsd}DocumentFolder" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="Date" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="NCheckedFiles" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="NDocuments" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="NDocumentsMissingMetadata" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="NFileErrors" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="NFileWarnings" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="NFiles" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="NFolders" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="NUncheckedFiles" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="dirCheckerType" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="checkFileLength" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="hasYearLevel" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "subFolder",
    "documentFolder"
})
@XmlRootElement(name = "RootFolder")
public class RootFolder {

    @XmlElement(name = "SubFolder")
    protected List<SubFolder> subFolder;
    @XmlElement(name = "DocumentFolder")
    protected List<DocumentFolder> documentFolder;
    @XmlAttribute(name = "Date", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String date;
    @XmlAttribute(name = "NCheckedFiles", required = true)
    protected BigInteger nCheckedFiles;
    @XmlAttribute(name = "NDocuments", required = true)
    protected BigInteger nDocuments;
    @XmlAttribute(name = "NDocumentsMissingMetadata", required = true)
    protected BigInteger nDocumentsMissingMetadata;
    @XmlAttribute(name = "NFileErrors", required = true)
    protected BigInteger nFileErrors;
    @XmlAttribute(name = "NFileWarnings", required = true)
    protected BigInteger nFileWarnings;
    @XmlAttribute(name = "NFiles", required = true)
    protected BigInteger nFiles;
    @XmlAttribute(name = "NFolders", required = true)
    protected BigInteger nFolders;
    @XmlAttribute(name = "NUncheckedFiles", required = true)
    protected BigInteger nUncheckedFiles;
    @XmlAttribute(name = "dirCheckerType")
    protected String dirCheckerType;
    @XmlAttribute(name = "checkFileLength")
    protected String checkFileLength;
    @XmlAttribute(name = "hasYearLevel")
    protected String hasYearLevel;

    /**
     * Gets the value of the subFolder property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subFolder property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubFolder().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SubFolder }
     * 
     * 
     */
    public List<SubFolder> getSubFolder() {
        if (subFolder == null) {
            subFolder = new ArrayList<SubFolder>();
        }
        return this.subFolder;
    }

    /**
     * Gets the value of the documentFolder property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the documentFolder property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDocumentFolder().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DocumentFolder }
     * 
     * 
     */
    public List<DocumentFolder> getDocumentFolder() {
        if (documentFolder == null) {
            documentFolder = new ArrayList<DocumentFolder>();
        }
        return this.documentFolder;
    }

    /**
     * Gets the value of the date property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDate() {
        return date;
    }

    /**
     * Sets the value of the date property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDate(String value) {
        this.date = value;
    }

    /**
     * Gets the value of the nCheckedFiles property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNCheckedFiles() {
        return nCheckedFiles;
    }

    /**
     * Sets the value of the nCheckedFiles property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNCheckedFiles(BigInteger value) {
        this.nCheckedFiles = value;
    }

    /**
     * Gets the value of the nDocuments property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNDocuments() {
        return nDocuments;
    }

    /**
     * Sets the value of the nDocuments property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNDocuments(BigInteger value) {
        this.nDocuments = value;
    }

    /**
     * Gets the value of the nDocumentsMissingMetadata property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNDocumentsMissingMetadata() {
        return nDocumentsMissingMetadata;
    }

    /**
     * Sets the value of the nDocumentsMissingMetadata property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNDocumentsMissingMetadata(BigInteger value) {
        this.nDocumentsMissingMetadata = value;
    }

    /**
     * Gets the value of the nFileErrors property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNFileErrors() {
        return nFileErrors;
    }

    /**
     * Sets the value of the nFileErrors property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNFileErrors(BigInteger value) {
        this.nFileErrors = value;
    }

    /**
     * Gets the value of the nFileWarnings property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNFileWarnings() {
        return nFileWarnings;
    }

    /**
     * Sets the value of the nFileWarnings property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNFileWarnings(BigInteger value) {
        this.nFileWarnings = value;
    }

    /**
     * Gets the value of the nFiles property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNFiles() {
        return nFiles;
    }

    /**
     * Sets the value of the nFiles property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNFiles(BigInteger value) {
        this.nFiles = value;
    }

    /**
     * Gets the value of the nFolders property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNFolders() {
        return nFolders;
    }

    /**
     * Sets the value of the nFolders property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNFolders(BigInteger value) {
        this.nFolders = value;
    }

    /**
     * Gets the value of the nUncheckedFiles property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNUncheckedFiles() {
        return nUncheckedFiles;
    }

    /**
     * Sets the value of the nUncheckedFiles property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNUncheckedFiles(BigInteger value) {
        this.nUncheckedFiles = value;
    }

    /**
     * Gets the value of the dirCheckerType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDirCheckerType() {
        return dirCheckerType;
    }

    /**
     * Sets the value of the dirCheckerType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDirCheckerType(String value) {
        this.dirCheckerType = value;
    }

    /**
     * Gets the value of the checkFileLength property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCheckFileLength() {
        return checkFileLength;
    }

    /**
     * Sets the value of the checkFileLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCheckFileLength(String value) {
        this.checkFileLength = value;
    }

    /**
     * Gets the value of the hasYearLevel property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHasYearLevel() {
        return hasYearLevel;
    }

    /**
     * Sets the value of the hasYearLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHasYearLevel(String value) {
        this.hasYearLevel = value;
    }

}
